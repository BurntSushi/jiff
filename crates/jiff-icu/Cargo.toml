[package]
name = "jiff-icu"
version = "0.2.0"  #:version
authors = ["Andrew Gallant <jamslam@gmail.com>"]
license = "Unlicense OR MIT"
homepage = "https://github.com/BurntSushi/jiff/tree/master/crates/jiff-icu"
repository = "https://github.com/BurntSushi/jiff"
documentation = "https://docs.rs/jiff-icu"
description = "Conversion routines between Jiff and ICU4X."
categories = ["date-and-time"]
keywords = ["date", "time", "temporal", "zone", "icu"]
edition = "2021"
rust-version = "1.82"
include = ["/src/*.rs", "/*.dat", "COPYING", "LICENSE-MIT", "UNLICENSE"]

# Integration crates in Jiff are explicitly isolated from the workspace to
# avoid dependencies accumulating. I was originally motivated to do this
# because rustc kept getting stun-locked compiling diesel. And this was somehow
# happening every time I saved a file inside of Jiff proper. So I just ragequit
# including everything in the same workspace and put integration crates (and
# examples) into their own little bloated fiefdoms.
[workspace]

[lib]
name = "jiff_icu"
bench = false
path = "src/lib.rs"

[features]
default = ["std", "zoned"]
std = ["jiff/std", "alloc"]
alloc = ["jiff/alloc", "icu_calendar/alloc", "icu_time?/alloc"]
time = ["dep:icu_time"]
# Compiled data is needed for parsing IANA time zone identifiers used by Jiff.
zoned = ["time", "icu_time?/compiled_data"]

[dependencies]
jiff = { version = "0.2.11", path = "../..", default-features = false }
icu_calendar = { version = "2.0.0", default-features = false }
icu_time = { version = "2.0.0", optional = true, default-features = false }

[dev-dependencies]
jiff = { version = "0.2.11", path = "../..", default-features = true }
icu = { version = "2.0.0" }

[package.metadata.docs.rs]
# We want to document all features.
all-features = true
# Since this crate's feature setup is pretty complicated, it is worth opting
# into a nightly unstable option to show the features that need to be enabled
# for public API items. To do that, we set `docsrs_jiff`, and when that's
# enabled, we enable the 'doc_cfg' feature.
#
# To test this locally, run:
#
#     RUSTDOCFLAGS="--cfg docsrs_jiff" cargo +nightly doc --all-features
#
# Note that we use `docsrs_jiff` instead of the more standard `docsrs` because
# other crates use that same `cfg` knob. And since we are enabling a nightly
# feature, they sometimes break. By using our "own" `cfg` knob, we are closer
# to being masters of our own destiny.
rustdoc-args = ["--cfg", "docsrs_jiff"]

# This squashes the (AFAIK) erroneous warning that `docsrs_jiff` is not a
# valid `cfg` knob.
[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(docsrs_jiff)'] }
